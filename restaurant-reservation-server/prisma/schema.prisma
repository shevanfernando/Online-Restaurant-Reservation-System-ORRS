datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  customerId String    @id
  Person     Person    @relation(fields: [personId], references: [id])
  personId   Int       @unique
  User       User      @relation(fields: [userId], references: [id])
  userId     Int       @unique
  Booking    Booking[]
}

model Staff {
  staffId   String    @id
  staffType StaffType
  Person    Person    @relation(fields: [personId], references: [id])
  personId  Int       @unique
  User      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique
}

enum StaffType {
  RECEPTIONIST
  WAITER
  ADMIN
  CHEF
}

model Person {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String?
  email       String    @unique
  phoneNumber String?   @unique
  nic         String    @unique
  Customer    Customer?
  Staff       Staff?
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  password String
  userType UserType
  Customer Customer?
  Staff    Staff?
}

enum UserType {
  CUSTOMER
  STAFF
}

model Victual {
  victualId   Int       @id @default(autoincrement())
  name        String    @unique
  description String
  price       Float
  imagePath   String?
  Food        Food?
  Beverage    Beverage?
}

model Food {
  foodId    String   @id
  foodType  FoodType
  Victual   Victual  @relation(fields: [victualId], references: [victualId])
  victualId Int      @unique
  Order     Order?   @relation(fields: [orderId], references: [orderId])
  orderId   String?
}

enum FoodType {
  STARTERS
  SIDE_DISHES
  MAIN_COURSES
  DESSERTS
}

model Beverage {
  beverageId   String       @id
  beverageType BeverageType
  Victual      Victual      @relation(fields: [victualId], references: [victualId])
  victualId    Int          @unique
  Order        Order?       @relation(fields: [orderId], references: [orderId])
  orderId      String?
}

enum BeverageType {
  STIMULATING
  NOURISHING
  REFRESHING
  BEER
  VINE
  WHISKY
  VODKA
  RUM
  BRANDY
}

model Order {
  orderId            String     @id
  foodList           Food[]
  beveragesList      Beverage[]
  noOfPersons        Int
  requestDateAndTime DateTime
  Table              Table[]
  Booking            Booking?   @relation(fields: [bookingId], references: [bookingId])
  bookingId          String?
}

model Table {
  tableId       String    @id
  tableType     TableType
  numberOfSeats Int
  Order         Order?    @relation(fields: [orderId], references: [orderId])
  orderId       String?
  Booking       Booking?  @relation(fields: [bookingId], references: [bookingId])
  bookingId     String?
}

enum TableType {
  NORMAL
  RESERVATION
}

model Booking {
  bookingId      String   @id
  bookingDate    DateTime
  startTime      DateTime
  endTime        DateTime
  reservedTables Table[]
  oreders        Order[]
  Customer       Customer @relation(fields: [customerId], references: [customerId])
  customerId     String
}

model Feedback {
  feedbackId Int          @id @default(autoincrement())
  level      Experiance
  feedback   String
  type       FeedbackType
}

enum Experiance {
  POOR
  AVERAGE
  GOOD
}

enum FeedbackType {
  BUG
  SUGGESTION
  OTHER
}
